// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model user {
    id                     String         @id @unique
    xp                     Int            @default(0)
    level                  Int            @default(1)
    cookies                Int            @default(0)
    banned                 BigInt?
    banReason              String?
    settings               usersettings?
    badges                 Int            @default(0) // PARTNER VERIFIED VIP TEAM
    inventory              userinventory?
    battle                 userbattle?
    sysUserName            String? //Systemuser
    boundTo                user?          @relation("systemuser_bound", fields: [boundId], references: [id]) //Systemuser
    boundSysUser           user?          @relation("systemuser_bound") //User
    boundId                String?        @unique
    loggedInUser           user?          @relation("systemuser_loggedin", fields: [loggedInId], references: [id]) //User
    loggedInAs             user?          @relation("systemuser_loggedin") //Systemuser
    loggedInId             String?        @unique
    sysUserPassword        String? //Systemuser
    sysUserPermissionLevel Int? //Systemuser
}

model usersettings {
    id     String  @id @unique
    user   user    @relation(fields: [id], references: [id])
    giftDm Boolean @default(false)
}

model userinventory {
    id    String @id @unique
    user  user   @relation(fields: [id], references: [id])
    items Json[]
    // id: string
    // count: number,
    // metadata: any
}

model userbattle {
    id            String   @id @unique
    user          user     @relation(fields: [id], references: [id])
    stats         Json[]   @default([])
    ready         Boolean  @default(false)
    priority      String?
    hp            String?
    healTimestamp DateTime @default(now())
    class         String?
    attacks       String[] @default([])
}

model server {
    id       String         @id @unique
    xp       Int            @default(0)
    level    Int            @default(1)
    theme    Json           @default("{\"red\": \"#E62535\", \"yellow\": \"#F2E03F\", \"lime\": \"#25D971\", \"normal\": \"#00b99b\"}")
    partner  Int            @default(0)
    verified Boolean        @default(false)
    keksbox  serverkeksbox?
}

model serverkeksbox {
    id          String   @id @unique
    server      server   @relation(fields: [id], references: [id])
    spawnrate   Int      @default(100)
    channels    String[] @default([])
    message     String?
    channel     String?
    multiplier  Int?
    keepmessage Boolean  @default(false)
}
